/*
 * OpenFGA
 *
 * A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@openfga.dev
 * Generated by: https://openapi-generator.tech
 */

use super::{WriteRequestDeletes, WriteRequestWrites};




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WriteRequest {
    #[serde(rename = "writes", skip_serializing_if = "Option::is_none")]
    pub writes: Option<Box<crate::models::WriteRequestWrites>>,
    #[serde(rename = "deletes", skip_serializing_if = "Option::is_none")]
    pub deletes: Option<Box<crate::models::WriteRequestDeletes>>,
    #[serde(
        rename = "authorization_model_id",
        skip_serializing_if = "Option::is_none"
    )]
    pub authorization_model_id: Option<String>,
}

impl WriteRequest {
    pub fn new(writes: Option<Box<WriteRequestWrites>>, deletes: Option<Box<WriteRequestDeletes>>, authorization_model_id: Option<String>) -> WriteRequest {
        WriteRequest {
            writes,
            deletes,
            authorization_model_id,
        }
    }
}
